dat$years=as.numeric(dat$years)
dat$month=as.numeric(dat$month)
dat$years=as.factor(dat$years)
dat$Heroin=as.factor(dat$Heroin)
dat$Sex=as.factor(dat$Sex)
dat$Death.County=as.factor(dat$Death.County)
plot(density(dat$Age), main="Density of age in the data set", col="cadetblue", xlab="Age")
grid()
barplot(table(dat$years), main="Number of deaths per year", col="coral")
dat$month=substr(dat$Date, 1, 2)
dat$Date=as.character(dat$Date)
dat$years=substr(dat$Date, 7, nchar(dat$Date))
dat$years=factor(dat$years)
dat$years=as.numeric(dat$years)
dat$month=as.numeric(dat$month)
dat$Heroin=as.factor(dat$Heroin)
dat$Sex=as.factor(dat$Sex)
dat$Death.County=as.factor(dat$Death.County)
plot(density(dat$Age), main="Density of age in the data set", col="cadetblue", xlab="Age")
grid()
barplot(table(dat$years), main="Number of deaths per year", col="coral")
dat$month=substr(dat$Date, 1, 2)
dat$Date=as.character(dat$Date)
dat$years=substr(dat$Date, 7, nchar(dat$Date))
dat$years=as.numeric(dat$years)
dat$month=as.numeric(dat$month)
dat$Heroin=as.factor(dat$Heroin)
dat$Sex=as.factor(dat$Sex)
dat$Death.County=as.factor(dat$Death.County)
plot(density(dat$Age), main="Density of age in the data set", col="cadetblue", xlab="Age")
grid()
barplot(table(dat$years), main="Number of deaths per year", col="coral")
par(mar=c(3,10,3,3))
barplot(sort(table(dat$Race)), main="Number of deaths per race", col="coral", las=1, horiz=TRUE)
barplot(table(dat$Sex), main="Deaths per sex", col="coral", ylim=c(0,3000))
table(dat$Location)
tbl=sapply(dat[, 14:24], table)
par(mar=c(3,8,3,3))
barplot(sort(tbl[2,]), main="Number of recorded uses per drug type", las=1, horiz=TRUE, col="coral", xlim=c(0, 2500))
set.seed(1)
split = split_data(dat)
tr_dat = split[[1]]
te_dat = split[[2]]
library(rpart)
library(rpart.plot)
library(e1071)
#install.packages("devtools")
library(devtools)
#install_github("easyGgplot2", "kassambara")
library(easyGgplot2)
library(rpart)
library(rpart.plot)
library(e1071)
#install.packages("devtools")
library(devtools)
#install_github("easyGgplot2", "kassambara")
library(easyGgplot2)
library(ggplot2)
table(te_dat$hospital)/nrow(te_dat)
fit = naiveBayes(hospital ~ month+ Death.City, data=tr_dat)
predicts = suppressWarnings(predict(fit, newdata=te_dat))
actual=te_dat$hospital
conf_mtx = table(actual, predicts)
conf_mtx
mean(predicts == te_dat$hospital)
fit = rpart(hospital ~ month+ Death.City + Residence.City + Age, data=tr_dat, method="class")
prp(fit, extra=106, varlen=-10, main="classification tree for public/private univ.", box.col=c("palegreen", "pink")[fit$frame$yval])
predicted = predict(fit, te_dat, type="class")
actual = te_dat$hospital
table(actual, predicted)
mean(actual == predicted)
table(te_dat$Heroin)/nrow(te_dat)
fit = naiveBayes(Heroin ~ years + Death.County + Age + Sex, data=tr_dat)
predicts = suppressWarnings(predict(fit, newdata=te_dat))
actual=te_dat$Heroin
conf_mtx = table(actual, predicts)
conf_mtx
mean(predicts == te_dat$Heroin)
fv = te_dat[1,c("Heroin","Death.County")]
prob_cp_ok = fit$tables$Death.County[1,fv$Death.County]
prob_cp_hd = fit$tables$Death.County[2,fv$Death.County]
par(mar=c(3,8,3,3))
barplot(rbind(fit$tables$Death.County[1,], fit$tables$Death.County[2,]),las=1, horiz=TRUE, beside = TRUE, col=c("coral3", "cadetblue"), main="Probability of Heroin Caused Death per County", xlim=c(0.0, 0.3))
legend("topright", inset=0.05, legend=c("No Heroin", "Heroin Detected"), fill=c("coral3", "cadetblue"), cex=1)
fit = rpart(Heroin ~ years + Age + Death.County +Sex, data=tr_dat, method="class")
prp(fit, extra=106, varlen=-10, main="classification tree for public/private univ.", box.col=c("palegreen", "pink")[fit$frame$yval])
predicted = predict(fit, te_dat, type="class")
actual = te_dat$Heroin
table(actual, predicted)
mean(actual == predicted)
fit = glm(hospital ~ Death.City, data=tr_dat,
family=binomial)
y = predict(fit, newdata=tr_dat, type="response")
predicts = as.numeric(y > 0.5)
actuals = tr_dat$hospital
conf_mtx = table(predicts, actuals)
conf_mtx
fit=glm(month ~  hospital + Death.City, data=tr_dat)
mean(predicts==actuals)
table(actuals)
table(predicts)
sum(predicts==0)
sum(predicts==0)/sum(actuals=="No")
y = predict(fit, newdata=tr_dat, type="response")
predicts = as.numeric(y > 0.5)
actuals = tr_dat$hospital
predicts=ifelse(predicts==0, "No", "Yes")
conf_mtx = table(predicts, actuals)
conf_mtx
y = predict(fit, newdata=tr_dat, type="response")
predicts = as.numeric(y > 0.5)
actuals = tr_dat$hospital
#predicts=ifelse(predicts==0, "No", "Yes")
conf_mtx = table(predicts, actuals)
conf_mtx
y = predict(fit, newdata=tr_dat, type="response")
predicts = as.numeric(y > 0.5)
actuals = tr_dat$hospital
#predicts=ifelse(predicts==0, "No", "Yes")
conf_mtx = table(predicts, actuals)
conf_mtx
fit = glm(hospital ~ Death.City, data=tr_dat,
family=binomial)
y = predict(fit, newdata=tr_dat, type="response")
predicts = as.numeric(y > 0.5)
actuals = tr_dat$hospital
#predicts=ifelse(predicts==0, "No", "Yes")
conf_mtx = table(predicts, actuals)
conf_mtx
y = predict(fit, newdata=tr_dat, type="response")
predicts = as.numeric(y > 0.5)
actuals = tr_dat$hospital
predicts=ifelse(predicts==0, "No", "Yes")
conf_mtx = table(predicts, actuals)
conf_mtx
y = predict(fit, newdata=tr_dat, type="response")
predicts = as.numeric(y > 0.5)
actuals = tr_dat$hospital
#predicts=ifelse(predicts==0, "No", "Yes")
conf_mtx = table(predicts, actuals)
conf_mtx
y = predict(fit, newdata=tr_dat, type="response")
predicts = as.numeric(y > 0.5)
actuals = tr_dat$hospital
predicts=ifelse(predicts==0, "No", "Yes")
conf_mtx = table(predicts, actuals)
conf_mtx
mean(predicts==actuals)
fit = glm(hospital ~ Death.City + month, data=tr_dat,
family=binomial)
fit = glm(hospital ~ Death.City + month, data=tr_dat,
family=binomial)
y = predict(fit, newdata=tr_dat, type="response")
predicts = as.numeric(y > 0.5)
actuals = tr_dat$hospital
predicts=ifelse(predicts==0, "No", "Yes")
conf_mtx = table(predicts, actuals)
conf_mtx
mean(predicts==actuals)
fit = naiveBayes(hospital ~ month+ Death.City, data=tr_dat)
predicts = suppressWarnings(predict(fit, newdata=te_dat))
actual=te_dat$hospital
conf_mtx = table(actual, predicts)
conf_mtx
mean(predicts == te_dat$hospital)
y = predict(fit, newdata=tr_dat, type="response")
fit = glm(hospital ~ Death.City + month, data=tr_dat,
family=binomial)
y = predict(fit, newdata=tr_dat, type="response")
predicts = as.numeric(y > 0.5)
actuals = tr_dat$hospital
predicts=ifelse(predicts==0, "No", "Yes")
conf_mtx = table(predicts, actuals)
conf_mtx
mean(predicts==actuals)
prec_recall_summary = function(predicts, actuals) {
thresh = seq(0, 1, length.out=50)
prec_rec = data.frame()
actuals = factor(as.numeric(actuals))
for (th in thresh) {
predicts = factor(as.numeric(predicted3 >= th), levels=c("0","1"))
prec_rec = rbind(prec_rec, as.vector(table(predicts, actuals)))
}
names(prec_rec) = c("TN", "FP", "FN", "TP")
prec_rec$threshold = thresh
prec_rec$precision = prec_rec$TP/(prec_rec$TP + prec_rec$FP)
prec_rec$recall    = prec_rec$TP/(prec_rec$TP + prec_rec$FN)
prec_rec$false_pos = prec_rec$FP/(prec_rec$FP + prec_rec$TN)
return(prec_rec)
}
prec_rec3 = prec_recall_summary(predicted3, actuals)
prec_recall_summary = function(predicts, actuals) {
thresh = seq(0, 1, length.out=50)
prec_rec = data.frame()
actuals = factor(as.numeric(actuals))
for (th in thresh) {
predicts = factor(as.numeric(predicted3 >= th), levels=c("0","1"))
prec_rec = rbind(prec_rec, as.vector(table(predicts, actuals)))
}
names(prec_rec) = c("TN", "FP", "FN", "TP")
prec_rec$threshold = thresh
prec_rec$precision = prec_rec$TP/(prec_rec$TP + prec_rec$FP)
prec_rec$recall    = prec_rec$TP/(prec_rec$TP + prec_rec$FN)
prec_rec$false_pos = prec_rec$FP/(prec_rec$FP + prec_rec$TN)
return(prec_rec)
}
prec_rec3 = prec_recall_summary(predicts, actuals)
prec_recall_summary = function(predicts, actuals) {
thresh = seq(0, 1, length.out=50)
prec_rec = data.frame()
actuals = factor(as.numeric(actuals))
for (th in thresh) {
predicts = factor(as.numeric(predicts >= th), levels=c("0","1"))
prec_rec = rbind(prec_rec, as.vector(table(predicts, actuals)))
}
names(prec_rec) = c("TN", "FP", "FN", "TP")
prec_rec$threshold = thresh
prec_rec$precision = prec_rec$TP/(prec_rec$TP + prec_rec$FP)
prec_rec$recall    = prec_rec$TP/(prec_rec$TP + prec_rec$FN)
prec_rec$false_pos = prec_rec$FP/(prec_rec$FP + prec_rec$TN)
return(prec_rec)
}
prec_rec3 = prec_recall_summary(predicts, actuals)
as.factor(predicts)
table(as.factor(predicts))
table(as.numeric(as.factor(predicts)))
table(as.numeric(as.factor(predicts))-1)
table(as.factor(as.numeric(as.factor(predicts))-1))
table(as.factor(as.numeric(as.factor(predicts))-1))
table(as.factor(as.numeric(as.factor(actuals))-1))
predicts(as.factor(as.numeric(as.factor(predicts))-1))
predicts=(as.factor(as.numeric(as.factor(predicts))-1))
actuals=(as.factor(as.numeric(as.factor(actuals))-1))
prec_recall_summary = function(predicts, actuals) {
thresh = seq(0, 1, length.out=50)
prec_rec = data.frame()
actuals = factor(as.numeric(actuals))
for (th in thresh) {
predicts = factor(as.numeric(predicts >= th), levels=c("0","1"))
prec_rec = rbind(prec_rec, as.vector(table(predicts, actuals)))
}
names(prec_rec) = c("TN", "FP", "FN", "TP")
prec_rec$threshold = thresh
prec_rec$precision = prec_rec$TP/(prec_rec$TP + prec_rec$FP)
prec_rec$recall    = prec_rec$TP/(prec_rec$TP + prec_rec$FN)
prec_rec$false_pos = prec_rec$FP/(prec_rec$FP + prec_rec$TN)
return(prec_rec)
}
prec_rec3 = prec_recall_summary(predicts, actuals)
y = predict(fit, newdata=tr_dat, type="response")
predicts = as.numeric(y > 0.5)
actuals = tr_dat$hospital
predicts=ifelse(predicts==0, "No", "Yes")
conf_mtx = table(predicts, actuals)
conf_mtx
mean(predicts==actuals)
par(mfrow=c(1,2))
hist(predicted[actuals==0], breaks=10,  xlim=c(0,1), ylim=c(0,15), main="Prediction when no heart disease", col="coral3", xlab="Predictions")
par(mfrow=c(1,2))
hist(predicts[actuals==0], breaks=10,  xlim=c(0,1), ylim=c(0,15), main="Prediction when no heart disease", col="coral3", xlab="Predictions")
par(mfrow=c(1,2))
hist(y[actuals==0], breaks=10,  xlim=c(0,1), ylim=c(0,15), main="Prediction when no heart disease", col="coral3", xlab="Predictions")
fit = glm(hospital ~ Death.City + month, data=tr_dat,
family=binomial)
y = predict(fit, newdata=te_dat, type="response")
fit = glm(hospital ~ Death.City + month, data=tr_dat,
family=binomial)
y = predict(fit, newdata=tr_dat, type="response")
predicts = as.numeric(y > 0.5)
actuals = tr_dat$hospital
predicts=ifelse(predicts==0, "No", "Yes")
conf_mtx = table(predicts, actuals)
conf_mtx
mean(predicts==actuals)
fit = glm(hospital ~ Death.City + month, data=tr_dat,
family=binomial)
y = predict(fit, newdata=tr_dat, type="response")
predicts = as.numeric(y > 0.5)
actuals = tr_dat$hospital
predicts=ifelse(predicts==0, "No", "Yes")
conf_mtx = table(predicts, actuals)
conf_mtx
mean(predicts==actuals)
par(mfrow=c(1,2))
hist(y[actuals==0], breaks=10,  xlim=c(0,1), ylim=c(0,15), main="Prediction when no heart disease", col="coral3", xlab="Predictions")
predicted = predict(fit, newdata=tr_dat, type="response")
predicts = as.numeric(predicted > 0.5)
actuals = tr_dat$hospital
#predicts=ifelse(predicts==0, "No", "Yes")
conf_mtx = table(predicted, actuals)
conf_mtx
mean(predicts==actuals)
predicted = predict(fit, newdata=tr_dat, type="response")
predicts = as.numeric(predicted > 0.5)
actuals = tr_dat$hospital
#predicts=ifelse(predicts==0, "No", "Yes")
conf_mtx = table(predicts, actuals)
conf_mtx
#mean(predicts==actuals)
predicted = predict(fit, newdata=tr_dat, type="response")
predicts = as.numeric(predicted > 0.5)
actuals = tr_dat$hospital
#predicts=ifelse(predicts==0, "No", "Yes")
conf_mtx = table(predicts, actuals)
conf_mtx
mean(predicts==actuals)
par(mfrow=c(1,2))
hist(predicted[actuals==0], breaks=10,  xlim=c(0,1), ylim=c(0,15), main="Prediction when no heart disease", col="coral3", xlab="Predictions")
str(actuals)
par(mfrow=c(1,2))
hist(predicted[actuals==1], breaks=10,  xlim=c(0,1), ylim=c(0,15), main="Prediction when no heart disease", col="coral3", xlab="Predictions")
par(mfrow=c(1,2))
hist(predicted[actuals=="No"], breaks=10,  xlim=c(0,1), ylim=c(0,15), main="Prediction when no heart disease", col="coral3", xlab="Predictions")
hist(predicted[actuals=="Yes"], breaks=10, main="Prediction when heart disease", col="coral3", xlab="Predictions")
par(mfrow=c(1,2))
hist(predicted[actuals=="No"], breaks=10,  xlim=c(0,1), main="Prediction when no heart disease", col="coral3", xlab="Predictions")
hist(predicted[actuals=="Yes"], breaks=10, main="Prediction when heart disease", col="coral3", xlab="Predictions")
predicted = predict(fit, newdata=tr_dat, type="response")
predicts = as.numeric(predicted > 0.5)
actuals = tr_dat$hospital
predicts=ifelse(predicts==0, "No", "Yes")
conf_mtx = table(predicts, actuals)
conf_mtx
mean(predicts==actuals)
par(mfrow=c(1,2))
hist(predicted[actuals=="No"], breaks=10,  xlim=c(0,1), main="Prediction when no heart disease", col="coral3", xlab="Predictions")
hist(predicted[actuals=="Yes"], breaks=10, main="Prediction when heart disease", col="coral3", xlab="Predictions")
fit = glm(hospital ~ Death.City + month, data=tr_dat,
family=binomial)
predicted = predict(fit, newdata=tr_dat, type="response")
predicts = as.numeric(predicted > 0.6)
actuals = tr_dat$hospital
predicts=ifelse(predicts==0, "No", "Yes")
conf_mtx = table(predicts, actuals)
conf_mtx
mean(predicts==actuals)
par(mfrow=c(1,2))
hist(predicted[actuals=="No"], breaks=10,  xlim=c(0,1), main="Prediction when no heart disease", col="coral3", xlab="Predictions")
hist(predicted[actuals=="Yes"], breaks=10, main="Prediction when heart disease", col="coral3", xlab="Predictions")
predicted = predict(fit, newdata=tr_dat, type="response")
predicts = as.numeric(predicted > 0.55)
actuals = tr_dat$hospital
predicts=ifelse(predicts==0, "No", "Yes")
conf_mtx = table(predicts, actuals)
conf_mtx
mean(predicts==actuals)
par(mfrow=c(1,2))
hist(predicted[actuals=="No"], breaks=10,  xlim=c(0,1), main="Prediction when no heart disease", col="coral3", xlab="Predictions")
hist(predicted[actuals=="Yes"], breaks=10, main="Prediction when heart disease", col="coral3", xlab="Predictions")
par(mfrow=c(1,2))
hist(predicted[actuals=="No"], breaks=10,  xlim=c(0,1), main="Prediction of not hospital", col="coral3", xlab="Predictions")
hist(predicted[actuals=="Yes"], breaks=10, main="Prediction of hospital death", col="coral3", xlab="Predictions")
predicted = predict(fit, newdata=tr_dat, type="response")
predicts = as.numeric(predicted > 0.4)
actuals = tr_dat$hospital
predicts=ifelse(predicts==0, "No", "Yes")
conf_mtx = table(predicts, actuals)
conf_mtx
mean(predicts==actuals)
predicted = predict(fit, newdata=tr_dat, type="response")
predicts = as.numeric(predicted > 0.2)
actuals = tr_dat$hospital
predicts=ifelse(predicts==0, "No", "Yes")
conf_mtx = table(predicts, actuals)
conf_mtx
mean(predicts==actuals)
predicted = predict(fit, newdata=tr_dat, type="response")
predicts = as.numeric(predicted > 0.3)
actuals = tr_dat$hospital
predicts=ifelse(predicts==0, "No", "Yes")
conf_mtx = table(predicts, actuals)
conf_mtx
mean(predicts==actuals)
predicted = predict(fit, newdata=tr_dat, type="response")
predicts = as.numeric(predicted > 0.4)
actuals = tr_dat$hospital
predicts=ifelse(predicts==0, "No", "Yes")
conf_mtx = table(predicts, actuals)
conf_mtx
mean(predicts==actuals)
predicted = predict(fit, newdata=tr_dat, type="response")
predicts = as.numeric(predicted > 0.5)
actuals = tr_dat$hospital
predicts=ifelse(predicts==0, "No", "Yes")
conf_mtx = table(predicts, actuals)
conf_mtx
mean(predicts==actuals)
predicted = predict(fit, newdata=tr_dat, type="response")
predicts = as.numeric(predicted > 0.6)
actuals = tr_dat$hospital
predicts=ifelse(predicts==0, "No", "Yes")
conf_mtx = table(predicts, actuals)
conf_mtx
mean(predicts==actuals)
predicted = predict(fit, newdata=tr_dat, type="response")
predicts = as.numeric(predicted > 0.7)
actuals = tr_dat$hospital
predicts=ifelse(predicts==0, "No", "Yes")
conf_mtx = table(predicts, actuals)
conf_mtx
mean(predicts==actuals)
predicted = predict(fit, newdata=tr_dat, type="response")
predicts = as.numeric(predicted > 0.9)
actuals = tr_dat$hospital
predicts=ifelse(predicts==0, "No", "Yes")
conf_mtx = table(predicts, actuals)
conf_mtx
mean(predicts==actuals)
predicted = predict(fit, newdata=tr_dat, type="response")
predicts = as.numeric(predicted > 0.5)
actuals = tr_dat$hospital
predicts=ifelse(predicts==0, "No", "Yes")
conf_mtx = table(predicts, actuals)
conf_mtx
mean(predicts==actuals)
predicted = predict(fit, newdata=tr_dat, type="response")
predicts = as.numeric(predicted > 0.51)
actuals = tr_dat$hospital
predicts=ifelse(predicts==0, "No", "Yes")
conf_mtx = table(predicts, actuals)
conf_mtx
mean(predicts==actuals)
predicted = predict(fit, newdata=tr_dat, type="response")
predicts = as.numeric(predicted > 0.52)
actuals = tr_dat$hospital
predicts=ifelse(predicts==0, "No", "Yes")
conf_mtx = table(predicts, actuals)
conf_mtx
mean(predicts==actuals)
predicted = predict(fit, newdata=tr_dat, type="response")
predicts = as.numeric(predicted > 0.54)
actuals = tr_dat$hospital
predicts=ifelse(predicts==0, "No", "Yes")
conf_mtx = table(predicts, actuals)
conf_mtx
mean(predicts==actuals)
predicted = predict(fit, newdata=tr_dat, type="response")
predicts = as.numeric(predicted > 0.53)
actuals = tr_dat$hospital
predicts=ifelse(predicts==0, "No", "Yes")
conf_mtx = table(predicts, actuals)
conf_mtx
mean(predicts==actuals)
predicted = predict(fit, newdata=tr_dat, type="response")
predicts = as.numeric(predicted > 0.52)
actuals = tr_dat$hospital
predicts=ifelse(predicts==0, "No", "Yes")
conf_mtx = table(predicts, actuals)
conf_mtx
mean(predicts==actuals)
predicted = predict(fit, newdata=tr_dat, type="response")
predicts = as.numeric(predicted > 0.5)
actuals = tr_dat$hospital
predicts=ifelse(predicts==0, "No", "Yes")
conf_mtx = table(predicts, actuals)
conf_mtx
mean(predicts==actuals)
predicts=(as.factor(as.numeric(as.factor(predicts))-1))
actuals=(as.factor(as.numeric(as.factor(actuals))-1))
prec_recall_summary = function(predicts, actuals) {
thresh = seq(0, 1, length.out=50)
prec_rec = data.frame()
actuals = factor(as.numeric(actuals))
for (th in thresh) {
predicts = factor(as.numeric(predicts >= th), levels=c("0","1"))
prec_rec = rbind(prec_rec, as.vector(table(predicts, actuals)))
}
names(prec_rec) = c("TN", "FP", "FN", "TP")
prec_rec$threshold = thresh
prec_rec$precision = prec_rec$TP/(prec_rec$TP + prec_rec$FP)
prec_rec$recall    = prec_rec$TP/(prec_rec$TP + prec_rec$FN)
prec_rec$false_pos = prec_rec$FP/(prec_rec$FP + prec_rec$TN)
return(prec_rec)
}
prec_rec3 = prec_recall_summary(predicts, actuals)
fit = glm(hospital ~ Death.City + month, data=tr_dat,
family=binomial)
predicted = predict(fit, newdata=tr_dat, type="response")
predicts = as.numeric(predicted > 0.5)
actuals = tr_dat$hospital
predicts=ifelse(predicts==0, "No", "Yes")
conf_mtx = table(predicts, actuals)
conf_mtx
mean(predicts==actuals)
par(mfrow=c(1,2))
hist(predicted[actuals=="No"], breaks=10,  xlim=c(0,1), main="Prediction of not hospital", col="coral3", xlab="Predictions")
hist(predicted[actuals=="Yes"], breaks=10, main="Prediction of hospital death", col="coral3", xlab="Predictions")
table(te_dat$hospital)/nrow(te_dat)
fit = glm(hospital ~ Death.City + month, data=tr_dat,
family=binomial)
predicted = predict(fit, newdata=tr_dat, type="response")
predicts = as.numeric(predicted > 0.5)
actuals = tr_dat$hospital
predicts=ifelse(predicts==0, "No", "Yes")
conf_mtx = table(predicts, actuals)
conf_mtx
mean(predicts==actuals)
par(mfrow=c(1,2))
hist(predicted[actuals=="No"], breaks=10,  xlim=c(0,1), main="Prediction of not hospital", col="coral3", xlab="Predictions")
hist(predicted[actuals=="Yes"], breaks=10, main="Prediction of hospital death", col="coral3", xlab="Predictions")
fit = rpart(hospital ~ month+ Death.City, data=tr_dat, method="class")
prp(fit, extra=106, varlen=-10, main="classification tree for public/private univ.", box.col=c("palegreen", "pink")[fit$frame$yval])
predicted = predict(fit, te_dat, type="class")
actual = te_dat$hospital
table(actual, predicted)
mean(actual == predicted)
fit = rpart(hospital ~ month+ Death.City + Residence.City , data=tr_dat, method="class")
prp(fit, extra=106, varlen=-10, main="classification tree for public/private univ.", box.col=c("palegreen", "pink")[fit$frame$yval])
predicted = predict(fit, te_dat, type="class")
actual = te_dat$hospital
table(actual, predicted)
mean(actual == predicted)
